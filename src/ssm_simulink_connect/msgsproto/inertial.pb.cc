// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inertial.proto

#include "inertial.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_pose_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pose_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Pose;
}  // namespace protobuf_pose_2eproto
namespace gazebo {
namespace msgs {
class InertialDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Inertial>
      _instance;
} _Inertial_default_instance_;
}  // namespace msgs
}  // namespace gazebo
namespace protobuf_inertial_2eproto {
static void InitDefaultsInertial() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gazebo::msgs::_Inertial_default_instance_;
    new (ptr) ::gazebo::msgs::Inertial();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gazebo::msgs::Inertial::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Inertial =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInertial}, {
      &protobuf_pose_2eproto::scc_info_Pose.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Inertial.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gazebo::msgs::Inertial, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gazebo::msgs::Inertial, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gazebo::msgs::Inertial, mass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gazebo::msgs::Inertial, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gazebo::msgs::Inertial, ixx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gazebo::msgs::Inertial, ixy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gazebo::msgs::Inertial, ixz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gazebo::msgs::Inertial, iyy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gazebo::msgs::Inertial, iyz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gazebo::msgs::Inertial, izz_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  7,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::gazebo::msgs::Inertial)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gazebo::msgs::_Inertial_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "inertial.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016inertial.proto\022\013gazebo.msgs\032\npose.prot"
      "o\"\207\001\n\010Inertial\022\014\n\004mass\030\001 \001(\001\022\037\n\004pose\030\002 \001"
      "(\0132\021.gazebo.msgs.Pose\022\013\n\003ixx\030\003 \001(\001\022\013\n\003ix"
      "y\030\004 \001(\001\022\013\n\003ixz\030\005 \001(\001\022\013\n\003iyy\030\006 \001(\001\022\013\n\003iyz"
      "\030\007 \001(\001\022\013\n\003izz\030\010 \001(\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 179);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "inertial.proto", &protobuf_RegisterTypes);
  ::protobuf_pose_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_inertial_2eproto
namespace gazebo {
namespace msgs {

// ===================================================================

void Inertial::InitAsDefaultInstance() {
  ::gazebo::msgs::_Inertial_default_instance_._instance.get_mutable()->pose_ = const_cast< ::gazebo::msgs::Pose*>(
      ::gazebo::msgs::Pose::internal_default_instance());
}
void Inertial::clear_pose() {
  if (pose_ != NULL) pose_->Clear();
  clear_has_pose();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Inertial::kMassFieldNumber;
const int Inertial::kPoseFieldNumber;
const int Inertial::kIxxFieldNumber;
const int Inertial::kIxyFieldNumber;
const int Inertial::kIxzFieldNumber;
const int Inertial::kIyyFieldNumber;
const int Inertial::kIyzFieldNumber;
const int Inertial::kIzzFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Inertial::Inertial()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_inertial_2eproto::scc_info_Inertial.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gazebo.msgs.Inertial)
}
Inertial::Inertial(const Inertial& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pose()) {
    pose_ = new ::gazebo::msgs::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  ::memcpy(&mass_, &from.mass_,
    static_cast<size_t>(reinterpret_cast<char*>(&izz_) -
    reinterpret_cast<char*>(&mass_)) + sizeof(izz_));
  // @@protoc_insertion_point(copy_constructor:gazebo.msgs.Inertial)
}

void Inertial::SharedCtor() {
  ::memset(&pose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&izz_) -
      reinterpret_cast<char*>(&pose_)) + sizeof(izz_));
}

Inertial::~Inertial() {
  // @@protoc_insertion_point(destructor:gazebo.msgs.Inertial)
  SharedDtor();
}

void Inertial::SharedDtor() {
  if (this != internal_default_instance()) delete pose_;
}

void Inertial::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Inertial::descriptor() {
  ::protobuf_inertial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inertial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Inertial& Inertial::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_inertial_2eproto::scc_info_Inertial.base);
  return *internal_default_instance();
}


void Inertial::Clear() {
// @@protoc_insertion_point(message_clear_start:gazebo.msgs.Inertial)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pose_ != NULL);
    pose_->Clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&mass_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&izz_) -
        reinterpret_cast<char*>(&mass_)) + sizeof(izz_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Inertial::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gazebo.msgs.Inertial)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double mass = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_mass();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .gazebo.msgs.Pose pose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ixx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_ixx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ixx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ixy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_ixy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ixy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ixz = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_ixz();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ixz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double iyy = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_iyy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &iyy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double iyz = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_iyz();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &iyz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double izz = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_izz();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &izz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gazebo.msgs.Inertial)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gazebo.msgs.Inertial)
  return false;
#undef DO_
}

void Inertial::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gazebo.msgs.Inertial)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double mass = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->mass(), output);
  }

  // optional .gazebo.msgs.Pose pose = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pose(), output);
  }

  // optional double ixx = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ixx(), output);
  }

  // optional double ixy = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->ixy(), output);
  }

  // optional double ixz = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->ixz(), output);
  }

  // optional double iyy = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->iyy(), output);
  }

  // optional double iyz = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->iyz(), output);
  }

  // optional double izz = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->izz(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gazebo.msgs.Inertial)
}

::google::protobuf::uint8* Inertial::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gazebo.msgs.Inertial)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double mass = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->mass(), target);
  }

  // optional .gazebo.msgs.Pose pose = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pose(), deterministic, target);
  }

  // optional double ixx = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->ixx(), target);
  }

  // optional double ixy = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->ixy(), target);
  }

  // optional double ixz = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->ixz(), target);
  }

  // optional double iyy = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->iyy(), target);
  }

  // optional double iyz = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->iyz(), target);
  }

  // optional double izz = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->izz(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gazebo.msgs.Inertial)
  return target;
}

size_t Inertial::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gazebo.msgs.Inertial)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .gazebo.msgs.Pose pose = 2;
    if (has_pose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pose_);
    }

    // optional double mass = 1;
    if (has_mass()) {
      total_size += 1 + 8;
    }

    // optional double ixx = 3;
    if (has_ixx()) {
      total_size += 1 + 8;
    }

    // optional double ixy = 4;
    if (has_ixy()) {
      total_size += 1 + 8;
    }

    // optional double ixz = 5;
    if (has_ixz()) {
      total_size += 1 + 8;
    }

    // optional double iyy = 6;
    if (has_iyy()) {
      total_size += 1 + 8;
    }

    // optional double iyz = 7;
    if (has_iyz()) {
      total_size += 1 + 8;
    }

    // optional double izz = 8;
    if (has_izz()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Inertial::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gazebo.msgs.Inertial)
  GOOGLE_DCHECK_NE(&from, this);
  const Inertial* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Inertial>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gazebo.msgs.Inertial)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gazebo.msgs.Inertial)
    MergeFrom(*source);
  }
}

void Inertial::MergeFrom(const Inertial& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gazebo.msgs.Inertial)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pose()->::gazebo::msgs::Pose::MergeFrom(from.pose());
    }
    if (cached_has_bits & 0x00000002u) {
      mass_ = from.mass_;
    }
    if (cached_has_bits & 0x00000004u) {
      ixx_ = from.ixx_;
    }
    if (cached_has_bits & 0x00000008u) {
      ixy_ = from.ixy_;
    }
    if (cached_has_bits & 0x00000010u) {
      ixz_ = from.ixz_;
    }
    if (cached_has_bits & 0x00000020u) {
      iyy_ = from.iyy_;
    }
    if (cached_has_bits & 0x00000040u) {
      iyz_ = from.iyz_;
    }
    if (cached_has_bits & 0x00000080u) {
      izz_ = from.izz_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Inertial::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gazebo.msgs.Inertial)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Inertial::CopyFrom(const Inertial& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gazebo.msgs.Inertial)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Inertial::IsInitialized() const {
  if (has_pose()) {
    if (!this->pose_->IsInitialized()) return false;
  }
  return true;
}

void Inertial::Swap(Inertial* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Inertial::InternalSwap(Inertial* other) {
  using std::swap;
  swap(pose_, other->pose_);
  swap(mass_, other->mass_);
  swap(ixx_, other->ixx_);
  swap(ixy_, other->ixy_);
  swap(ixz_, other->ixz_);
  swap(iyy_, other->iyy_);
  swap(iyz_, other->iyz_);
  swap(izz_, other->izz_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Inertial::GetMetadata() const {
  protobuf_inertial_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inertial_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace gazebo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gazebo::msgs::Inertial* Arena::CreateMaybeMessage< ::gazebo::msgs::Inertial >(Arena* arena) {
  return Arena::CreateInternal< ::gazebo::msgs::Inertial >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
